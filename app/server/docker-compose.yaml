services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  qr-code-generator:
    build:
      context: .
      dockerfile: ./apps/qr-code-generator/Dockerfile
      target: development
    command: pnpm run start:dev qr-code-generator
    env_file:
      - ./apps/qr-code-generator/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  address.api:
    build:
      context: .
      dockerfile: ./apps/address.api/Dockerfile
      target: development
    command: pnpm run start:dev address.api
    env_file:
      - ./apps/address.api/.env
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  events:
    build:
      context: .
      dockerfile: ./apps/events/Dockerfile
      target: development
    command: pnpm run start:dev events
    env_file:
      - ./apps/events/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  postgres-database:
    container_name: postgres-database
    # build:
    #   context: .
    #   dockerfile: ./libs/common/src/database/Dockerfile.postgres
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: findyourdance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Fabian123!
    ports:
      - '6543:5432'
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
# volumes:
#   postgres_data:
